// Copyright (C) 2022 Nitrokey GmbH
// SPDX-License-Identifier: LGPL-3.0-only

[
    IoTest(
        name: "GET CHALLENGE",
        cmd_resp: [
            IoData(
                input: "00 84 0000 0A",
                output: And([NonZero, Len(0x0A)])
            ),
            IoData(
                input: "00 84 0000 00 0400",
                output: And([NonZero, Len(0x0400)])
            )
        ]
    ),
    IoTest(
        name: "AES",
        cmd_resp: [
            VerifyDefaultPw3,
            VerifyDefaultPw1,
            // Set aes key
            IoData(input: "0C DA 00D5 20 FFEEDDCCBBAA00998877665544332211FFEEDDCCBBAA00998877665544332211"),
            // Encrypt with AES
            IoData(
                input: "00 2A 86 80 10 00112233445566778899AABBCCDDEEFF 00",
                output: Data("02 d9d2ca17e160427aee649db6912dbfad"),
            ),
            // Decrypt with AES
            IoData(
                input: "00 2A 80 86 11 02 d9d2ca17e160427aee649db6912dbfad 00",
                output: Data("00112233445566778899AABBCCDDEEFF"),
            ),
        
        ]
    ),
    IoTest(
        name: "X25519 import",
        cmd_resp: [
            VerifyDefaultPw3,
            VerifyDefaultPw1,
            SetAttributes (key_type: Dec, key_kind: X25519),
            ImportKey(
                key: "77076d0a7318a57d3c16c17251b26645df4c2f87ebc0992ab177fba51db92c2a",
                key_type: Dec,
            ),
            ReadKey(
                public_key: "8520f0098930a754748b7ddcb43ef75a0dbf3a0d26381af4eba4a98eaa9b4e6a",
                key_kind: X25519,
                key_type: Dec,
            ),
        ]
    )
]